// Интерфейс Programmer описывает модель программиста в IT-компании, трудящегося в офисе. В течении дня компания
// кормит программиста пиццей. Однако при переводе программиста на удаленную работу метод eatPizza() в данной модели
// становится не нужен. Таким образом видно, что интерфейс Programmer содержит избыточные методы, а значит нарушает
//принцип ISP

public interface Programmer {
    void writeCode();
    void eatPizza();
}

// Решением проблемы становится разделение интерфейса

public interface Working {
    void writeCode();
}

public interface Relaxation {
    void eatPizza();
}

